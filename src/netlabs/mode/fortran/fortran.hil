; ***************************** Module Header ******************************\
;
; Module Name: fortran.hil
;
; Definitons of the Netlabs EPM Distribution Project
; for the syntax highlighting of the EPM mode "FORTRAN"
;
; Among others these definitions implement the definitions of
; the respective epmkwds definitions file of the EPMBBS distributiuon.
;
; Original empkwds.f90 file provided by Jason Liao
;
; Copyright (c) Netlabs EPM Distribution Project 2002
;
; $Id$
;
; ===========================================================================
;
; This file is part of the Netlabs EPM Distribution package and is free
; software.  You can redistribute it and/or modify it under the terms of the
; GNU General Public License as published by the Free Software
; Foundation, in version 2 as it comes in the "COPYING" file of the
; Netlabs EPM Distribution.  This library is distributed in the hope that it
; will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
; of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
; General Public License for more details.
;
; **************************************************************************/

[COMMENT]
; Start   End     Escape    StartPos
; string  string  character
  !

[LITERAL]
; Start      End
; string     string
  real(kind=  )
  (len=       )


[SPECIAL]
:: LITERAL
bit_size
selected_int_kind
selected_real_kind
dot_product
random_number
random_seed
data_and_time
len_trim
set_exponent
system_clock


[KEYWORD]
; --- Fortran language keywords
allocatable
allocate
if
go
backspace
call
case
character
close
contains
continue
cycle
data
deallocate
type
dimension
do
else
else
elsewhere
end
endfile
exit
external
format
function
if
implicit
inquire
integer
intent
interface
intrinsic
module
namelist
none
nullify
open
optional
parameter
pointer
print
private
program
public
read
result
return
rewind
save
select
sequence
stop
subroutine
target
then
to
type
use
where
write

[FUNCTION]
abs
achar
acos
adjustl
adjustr
aimag
aint
all
allocated
amint
any
asin
associated
atan
atan2
btest
ceiling
char
cmplx
conjg
cos
cosh
count
cshift
dble
digits
dim
dprod
eoshift
epsilon
exp
exponent
floor
fraction
huge
iachar
iand
ibclr
ibits
ibset
ichar
ieor
index
int
ior
ishft
ishftc
kind
lbound
len
lge
lgt
lle
llt
log
log1
logical
matmul
max
maxexponent
maxloc
maxval
merge
min
minexponent
minloc
minval
mod
mvbits
nearest
mint
not
pack
precision
present
product
radix
range
real
repeat
reshape
prspacing
scale
scan
shape
sign
sin
sinh
size
spacing
spread
sqrt
sum
tan
tanh
tiny
transfer
transpose
trim
ubound
unpack
verify

